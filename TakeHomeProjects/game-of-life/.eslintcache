[{"C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\game-of-life\\src\\index.js":"1","C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\game-of-life\\src\\App.js":"2","C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\game-of-life\\src\\utils\\GoLRules.js":"3","C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\game-of-life\\src\\utils\\patterns.js":"4","C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\game-of-life\\src\\components\\PatternMenu.js":"5","C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\game-of-life\\src\\components\\ControlPanel.js":"6","C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\game-of-life\\src\\components\\DataPanel.js":"7"},{"size":405,"mtime":1609004354462,"results":"8","hashOfConfig":"9"},{"size":3856,"mtime":1609176658454,"results":"10","hashOfConfig":"9"},{"size":2765,"mtime":1609094207501,"results":"11","hashOfConfig":"9"},{"size":73979,"mtime":1609172425134,"results":"12","hashOfConfig":"9"},{"size":1017,"mtime":1609176678937,"results":"13","hashOfConfig":"9"},{"size":1762,"mtime":1609175444156,"results":"14","hashOfConfig":"9"},{"size":979,"mtime":1609178316094,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1e8whcw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\game-of-life\\src\\index.js",[],["33","34"],"C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\game-of-life\\src\\App.js",["35"],"import React, { useState, useEffect } from \"react\";\nimport Cell from \"./utils/GoLRules\";\nimport PatternMenu from \"./components/PatternMenu\";\nimport ControlPanel from \"./components/ControlPanel\";\nimport DataPanel from \"./components/DataPanel\";\nimport \"./App.css\";\n\nexport let gameLoop;\n\nfunction App() {\n\tconst [gameState, setGameState] = useState({\n\t\tisRunning: false,\n\t\tspeed: 100,\n\t});\n\tconst [generation, setGeneration] = useState(0);\n\tconst [mouseDown, setMouseDown] = useState(false);\n\tconst [showPatternMenu, setShowPatternMenu] = useState(false);\n\tconst [board, setBoard] = useState((rows = 30, cols = 50) => {\n\t\tlet board = [];\n\t\tfor (let i = 0; i < rows; i++) {\n\t\t\tboard.push([]);\n\t\t\tfor (let j = 0; j < cols; j++) {\n\t\t\t\tboard[i].push(\"0\");\n\t\t\t}\n\t\t}\n\t\treturn board;\n\t});\n\n\tconst handleOnClick = (row, col) => {\n\t\tsetBoard((prevState) => {\n\t\t\tlet newBoard = prevState.map((inner) => inner.slice());\n\t\t\tnewBoard[row][col] = \"1\";\n\t\t\treturn newBoard;\n\t\t});\n\t};\n\n\tconst handleOnMouseOver = (e, row, col) => {\n\t\te.preventDefault();\n\t\tsetBoard((prevState) => {\n\t\t\tlet newBoard = prevState.map((inner) => inner.slice());\n\t\t\tnewBoard[row][col] = \"1\";\n\t\t\treturn newBoard;\n\t\t});\n\t};\n\n\tconst mainLoop = () => {\n\t\tgameLoop = setInterval(() => {\n\t\t\tsetBoard((prevBoard) => {\n\t\t\t\tlet newBoard = prevBoard.map((inner) => inner.slice());\n\t\t\t\tfor (let i = 0; i < prevBoard.length; i++) {\n\t\t\t\t\tfor (let j = 0; j < prevBoard[i].length; j++) {\n\t\t\t\t\t\t// Check for all surrounding cells and put them in an array\n\n\t\t\t\t\t\tlet myCell = new Cell(i, j, prevBoard);\n\n\t\t\t\t\t\tlet surroundingCells = myCell.checkSurroundingCells();\n\n\t\t\t\t\t\tlet aliveCount = surroundingCells.filter(\n\t\t\t\t\t\t\t(value) => value === \"1\"\n\t\t\t\t\t\t).length;\n\n\t\t\t\t\t\t// Dead cell surrounded by three alive cell turns alive\n\t\t\t\t\t\tif (prevBoard[i][j] === \"0\" && aliveCount === 3) {\n\t\t\t\t\t\t\tnewBoard[i][j] = \"1\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (prevBoard[i][j] === \"1\" && aliveCount < 2) {\n\t\t\t\t\t\t\tnewBoard[i][j] = \"0\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (prevBoard[i][j] === \"1\" && aliveCount > 3) {\n\t\t\t\t\t\t\tnewBoard[i][j] = \"0\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn newBoard;\n\t\t\t});\n\n\t\t\tsetGeneration((prevState) => prevState + 1);\n\t\t}, gameState.speed);\n\t};\n\n\tuseEffect(() => {\n\t\tif (gameState.isRunning) {\n\t\t\tmainLoop();\n\t\t}\n\t}, [gameState]);\n\n\treturn (\n\t\t<div className=\"wrapper\">\n\t\t\t<h1 className=\"title\">Game of Life</h1>\n\t\t\t<div className=\"game-container\">\n\t\t\t\t<div className=\"game-window\">\n\t\t\t\t\t{board.map((row, rowIndex) => {\n\t\t\t\t\t\treturn row.map((cell, colIndex) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tdisabled={gameState.isRunning}\n\t\t\t\t\t\t\t\t\tonMouseUp={(e) => setMouseDown(false)}\n\t\t\t\t\t\t\t\t\tonMouseDown={(e) => {\n\t\t\t\t\t\t\t\t\t\thandleOnClick(rowIndex, colIndex);\n\t\t\t\t\t\t\t\t\t\tsetMouseDown(true);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonMouseOver={(e) => {\n\t\t\t\t\t\t\t\t\t\tif (mouseDown) {\n\t\t\t\t\t\t\t\t\t\t\thandleOnMouseOver(\n\t\t\t\t\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\t\t\t\t\t\tcolIndex\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\thandleOnClick(rowIndex, colIndex)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tkey={colIndex + rowIndex * row.length}\n\t\t\t\t\t\t\t\t\tid={colIndex + rowIndex * row.length}\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\tcell === \"0\"\n\t\t\t\t\t\t\t\t\t\t\t? \"cell dead\"\n\t\t\t\t\t\t\t\t\t\t\t: \"cell alive\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t<ControlPanel\n\t\t\t\t\tsetGameState={setGameState}\n\t\t\t\t\tsetGeneration={setGeneration}\n\t\t\t\t\tsetShowPatternMenu={setShowPatternMenu}\n\t\t\t\t\tsetBoard={setBoard}\n\t\t\t\t></ControlPanel>\n\t\t\t\t<DataPanel\n\t\t\t\t\tsetGameState={setGameState}\n\t\t\t\t\tgameState={gameState}\n\t\t\t\t\tsetGeneration={setGeneration}\n\t\t\t\t\tgeneration={generation}\n\t\t\t\t\tsetBoard={setBoard}\n\t\t\t\t></DataPanel>\n\t\t\t\t{showPatternMenu && (\n\t\t\t\t\t<PatternMenu\n\t\t\t\t\t\tsetBoard={setBoard}\n\t\t\t\t\t\tsetGameState={setGameState}\n\t\t\t\t\t\tsetGeneration={setGeneration}\n\t\t\t\t\t\tsetShowPatternMenu={setShowPatternMenu}\n\t\t\t\t\t></PatternMenu>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\game-of-life\\src\\utils\\GoLRules.js",[],"C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\game-of-life\\src\\utils\\patterns.js",[],"C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\game-of-life\\src\\components\\PatternMenu.js",["36","37","38","39"],"import React, { useState, useEffect } from \"react\";\r\nimport { crazyCorners, pentadecathlon } from \"../utils/patterns\";\r\nimport { patterns } from \"../utils/patterns\";\r\nimport { gameLoop } from \"../App\";\r\n\r\nfunction PatternMenu({ setBoard, setGameState, setGeneration, setShowPatternMenu }) {\r\n\treturn (\r\n\t\t<div className=\"pattern-menu-container\">\r\n\t\t\t<div className=\"pattern-menu\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t{Object.keys(patterns).map((pattern) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tkey={pattern}\r\n\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\tclearInterval(gameLoop);\r\n\t\t\t\t\t\t\t\t\tsetGeneration(0);\r\n\t\t\t\t\t\t\t\t\tsetBoard(patterns[pattern]);\r\n\t\t\t\t\t\t\t\t\tsetGameState((prevState) => {\r\n\t\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\t\t\t\t\t\tisRunning: false,\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{pattern}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n                    <li onClick={() => setShowPatternMenu(prevState=> !prevState)}>Close</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PatternMenu;\r\n","C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\game-of-life\\src\\components\\ControlPanel.js",[],"C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\game-of-life\\src\\components\\DataPanel.js",["40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":87,"column":5,"nodeType":"47","endLine":87,"endColumn":16,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"49","severity":1,"message":"53","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":36},{"ruleId":"49","severity":1,"message":"54","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":22},{"ruleId":"49","severity":1,"message":"55","line":2,"column":24,"nodeType":"51","messageId":"52","endLine":2,"endColumn":38},{"ruleId":"49","severity":1,"message":"56","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":18},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mainLoop'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'crazyCorners' is defined but never used.","'pentadecathlon' is defined but never used.","'gameLoop' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [gameState, mainLoop]",{"range":"62","text":"63"},[2236,2247],"[gameState, mainLoop]"]