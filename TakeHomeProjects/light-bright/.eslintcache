[{"C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\light-bright\\src\\index.js":"1","C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\light-bright\\src\\App.js":"2","C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\light-bright\\src\\components\\ControlPanel.js":"3","C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\light-bright\\src\\components\\GameWindow.js":"4","C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\light-bright\\src\\components\\Cell.js":"5"},{"size":427,"mtime":1610653385770,"results":"6","hashOfConfig":"7"},{"size":667,"mtime":1611334750629,"results":"8","hashOfConfig":"7"},{"size":900,"mtime":1611333205590,"results":"9","hashOfConfig":"7"},{"size":1095,"mtime":1611333632657,"results":"10","hashOfConfig":"7"},{"size":923,"mtime":1611333782715,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1anjye0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\light-bright\\src\\index.js",[],["26","27"],"C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\light-bright\\src\\App.js",["28"],"C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\light-bright\\src\\components\\ControlPanel.js",["29"],"import React, { useState } from \"react\";\r\n\r\nfunction ControlPanel({ setCells, setColorIndex }) {\r\n\tconst resetCells = () => {\r\n\t\tsetCells((prevState) => {\r\n\t\t\tlet result = [];\r\n\t\t\tfor (let i = 0; i < 200; i++) {\r\n\t\t\t\tresult.push(\"\");\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t});\r\n\t};\r\n\r\n\tconst changeColorIndex = () => {\r\n\t\tsetColorIndex((prevState) => (prevState + 1) % 3);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"controlpanel-container\">\r\n\t\t\t<div className=\"controlpanel-button_container\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"fas fa-redo fa-2x controlpanel-button\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tresetCells();\r\n\t\t\t\t\t}}\r\n\t\t\t\t></button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"fas fa-palette fa-2x controlpanel-button\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tchangeColorIndex();\r\n\t\t\t\t\t}}\r\n\t\t\t\t></button>\r\n\t\t\t\t<button className=\"fas fa-question fa-2x controlpanel-button\"></button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ControlPanel;\r\n","C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\light-bright\\src\\components\\GameWindow.js",["30","31"],"import React, { useEffect, useState } from \"react\";\r\nimport Cell from \"./Cell\";\r\n\r\nconst colorList = [\"red\", \"blue\", \"green\"];\r\n\r\nfunction GameWindow({ cells, setCells, setColorIndex, colorIndex }) {\r\n\tconst [mouseDown, setMouseDown] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCells((prevState) => {\r\n\t\t\tlet result = [];\r\n\t\t\tfor (let i = 0; i < 200; i++) {\r\n\t\t\t\tresult.push(\"\");\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"gamewindow-container\">\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"gamewindow-window\"\r\n\t\t\t\tonMouseDown={() => {\r\n\t\t\t\t\tsetMouseDown(() => true);\r\n\t\t\t\t}}\r\n\t\t\t\tonMouseUp={() => {\r\n\t\t\t\t\tsetMouseDown(() => false);\r\n\t\t\t\t\tsetColorIndex((prevState) => (prevState + 1) % 3);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{cells.map((color, ind) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Cell\r\n\t\t\t\t\t\t\tcells={cells}\r\n\t\t\t\t\t\t\tsetCells={setCells}\r\n\t\t\t\t\t\t\tid={ind}\r\n\t\t\t\t\t\t\tmouseDown={mouseDown}\r\n\t\t\t\t\t\t\tsetMouseDown={setMouseDown}\r\n\t\t\t\t\t\t\tsetColorIndex={setColorIndex}\r\n\t\t\t\t\t\t\tcolorIndex={colorIndex}\r\n\t\t\t\t\t\t\tkey={ind}\r\n\t\t\t\t\t\t></Cell>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default GameWindow;\r\n","C:\\Users\\Valdrin\\vali\\FCC-CodingInterviewPrep\\TakeHomeProjects\\light-bright\\src\\components\\Cell.js",["32","33"],"import React, { useState } from \"react\";\r\n\r\nconst colorList = [\"red\", \"blue\", \"green\"];\r\n\r\nfunction Cell({ cells, setCells, setColorIndex, colorIndex, id, mouseDown }) {\r\n\tconst changeColor = (cellIndex) => {\r\n\t\tsetCells((prevState) => {\r\n\t\t\tlet result = prevState.map((color, ind) =>\r\n\t\t\t\tind === cellIndex ? colorList[colorIndex] : color\r\n\t\t\t);\r\n\t\t\treturn result;\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleOnClick = (e) => {\r\n\t\t// changeColor(parseInt(e.target.id));\r\n\t};\r\n\r\n\tconst handleOnMouseDown = (e) => {\r\n\t\tchangeColor(parseInt(e.target.id));\r\n\t};\r\n\r\n\tconst handleOnMouseOver = (e) => {\r\n\t\tif (mouseDown) {\r\n\t\t\tchangeColor(parseInt(e.target.id));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tid={id}\r\n\t\t\t// onClick={(e) => handleOnClick(e)}\r\n\t\t\tonMouseDown={(e) => {\r\n\t\t\t\thandleOnMouseDown(e);\r\n\t\t\t}}\r\n\t\t\tonMouseOver={(e) => handleOnMouseOver(e)}\r\n\t\t\tclassName={\"gamewindow-cell \" + cells[id]}\r\n\t\t></div>\r\n\t);\r\n}\r\n\r\nexport default Cell;\r\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":27,"nodeType":"40","messageId":"41","endLine":1,"endColumn":36},{"ruleId":"38","severity":1,"message":"42","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":25},{"ruleId":"38","severity":1,"message":"43","line":4,"column":7,"nodeType":"40","messageId":"41","endLine":4,"endColumn":16},{"ruleId":"44","severity":1,"message":"45","line":17,"column":5,"nodeType":"46","endLine":17,"endColumn":7,"suggestions":"47"},{"ruleId":"38","severity":1,"message":"42","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":25},{"ruleId":"38","severity":1,"message":"48","line":15,"column":8,"nodeType":"40","messageId":"41","endLine":15,"endColumn":21},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'colorList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCells'. Either include it or remove the dependency array. If 'setCells' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["51"],"'handleOnClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [setCells]",{"range":"54","text":"55"},[420,422],"[setCells]"]